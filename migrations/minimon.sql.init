--
-- PostgreSQL database dump
--

-- Dumped from database version 12.10
-- Dumped by pg_dump version 14.2 (Ubuntu 14.2-1.pgdg20.04+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA public;
COMMENT ON EXTENSION "uuid-ossp" IS 'generate universally unique identifiers (UUIDs)';
CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA public;
COMMENT ON EXTENSION pgcrypto IS 'cryptographic functions';
SET default_tablespace = '';
SET default_table_access_method = heap;

CREATE TABLE public.groups (
    id int primary key GENERATED ALWAYS AS IDENTITY,
    uuid uuid DEFAULT public.uuid_generate_v4(),
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    disabled boolean DEFAULT false,

    name varchar(255) NOT NULL,
    note text
);


CREATE TABLE public.http_connection_trigger (
    id int primary key GENERATED ALWAYS AS IDENTITY,
    uuid uuid DEFAULT public.uuid_generate_v4(),
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    disabled boolean DEFAULT false,
    group_id int DEFAULT 1,

    name varchar(255) NOT NULL,
    domain_name_lookup_time time DEFAULT '00:00:00.5',
    tcp_connection_time time DEFAULT '00:00:00.5',
    connect_time time DEFAULT '00:00:00.5',
    pretransfer_time time DEFAULT '00:00:00.5',
    start_transfer_time time DEFAULT '00:00:00.5',
    server_processing_time time DEFAULT '00:00:00.5',
    tls_handshake_time time DEFAULT '00:00:00.5',
    context_transfer_time time DEFAULT '00:00:00.5',
    total_time time DEFAULT '00:00:00.5',
    status_code int,
    check_response_body boolean DEFAULT false,
    check_response_header boolean DEFAULT false,
    response_body_regex text,
    response_header_regex text,
    ip_address inet DEFAULT '0.0.0.0/0'::inet,
    note text,
    FOREIGN KEY(group_id) REFERENCES groups(id)
);


CREATE TABLE public.http_connections (
    id int primary key GENERATED ALWAYS AS IDENTITY,
    uuid uuid DEFAULT public.uuid_generate_v4(),
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    disabled boolean DEFAULT false,

    url_id int,
    domain_name_lookup_time bigint,
    tcp_connection_time bigint,
    connect_time bigint,
    pre_transfer_time bigint,
    start_transfer_time bigint,
    server_processing_time bigint,
    tls_handshake_time bigint,
    context_transfer_time bigint,
    total_time bigint,
    start_time timestamp with time zone,
    stop_time timestamp with time zone,
    status_code bigint,
    ip_address inet,
    response_body_regex_match boolean,
    response_header_regex_match boolean,
    response_body_text text,
    response_header_text text
);


CREATE TABLE public.platforms (
    id int primary key GENERATED ALWAYS AS IDENTITY,
    uuid uuid DEFAULT public.uuid_generate_v4(),
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    disabled boolean DEFAULT false,

    note text,
    sequence smallint DEFAULT 0,
    name text
);


CREATE TABLE public.urls_x_platforms (
    url_id int NOT NULL,
    platform_id int NOT NULL
);


CREATE TABLE public.urls (
    id int primary key GENERATED ALWAYS AS IDENTITY,
    uuid uuid DEFAULT public.uuid_generate_v4(),
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    disabled boolean DEFAULT false,
    group_id int DEFAULT 1,
    http_connection_trigger_id int DEFAULT 1,

    note text,
    path varchar(2048) UNIQUE NOT NULL,
    allow_insecure_tls boolean,
    FOREIGN KEY(group_id) REFERENCES groups(id),
    FOREIGN KEY(http_connection_trigger_id) REFERENCES http_connection_trigger(id)
);


CREATE TABLE public.urls_x_groups (
    url_id int NOT NULL,
    group_id int NOT NULL
);


INSERT INTO http_connection_trigger (name) VALUES ('Default');
INSERT INTO groups (name) VALUES ('Default');
INSERT INTO urls (path) VALUES ('https://example.com');
INSERT INTO urls (path) VALUES ('https://example.org');
